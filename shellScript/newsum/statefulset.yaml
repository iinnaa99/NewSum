apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-service
  namespace: site
spec:
  serviceName: mysql-service
  replicas: 1
  selector:
    matchLabels:
      app: mysql-service
  template:
    metadata:
      labels:
        app: mysql-service
    spec:
      nodeSelector:
        kubernetes.io/hostname: worker2
      containers:
      - name: mysql-service
        image: mysql:8.0
        envFrom:
          - configMapRef:
              name: configmap-env
        ports:
        - name: mysql-service
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: local-storage
      resources:
        requests:
          storage: 10Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: site
spec:
  type: ClusterIP
  selector:
    app: mysql-service
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: raid-pv
spec:
  capacity:
    storage: 10Gi  # RAID 디스크의 실제 용량에 맞게 조정하세요
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /mnt/raid10  # RAID 디스크가 마운트된 경로
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - worker2  # worker2 노드에만 스케줄링

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-env
  namespace: site
data:
  MYSQL_ROOT_PASSWORD: mysql
  MYSQL_DATABASE: news_db
  MYSQL_USER: root
  MYSQL_PASSWORD: newsum

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

